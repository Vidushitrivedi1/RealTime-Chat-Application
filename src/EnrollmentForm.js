import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './EnrollmentForm.css';

const disabilities = [
  'Blindness (‡§Ö‡§Ç‡§ß‡§æ‡§™‡§®)', 'Low Vision (‡§ï‡§Æ ‡§¶‡•É‡§∑‡•ç‡§ü‡§ø)', 'Leprosy Cured (‡§ï‡•Å‡§∑‡•ç‡§† ‡§∞‡•ã‡§ó ‡§†‡•Ä‡§ï ‡§π‡•Å‡§Ü)',
  'Hearing Impairment (‡§∂‡•ç‡§∞‡§µ‡§£ ‡§¨‡§æ‡§ß‡§ø‡§§)', 'Locomotor Disability (‡§ó‡§§‡§ø‡§∂‡•Ä‡§≤‡§§‡§æ ‡§µ‡§ø‡§ï‡§≤‡§æ‡§Ç‡§ó‡§§‡§æ)',
  'Dwarfism (‡§¨‡•å‡§®‡§æ ‡§™‡§®)', 'Intellectual Disability (‡§¨‡•å‡§¶‡•ç‡§ß‡§ø‡§ï ‡§µ‡§ø‡§ï‡§≤‡§æ‡§Ç‡§ó‡§§‡§æ)', 'Mental Illness (‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä)',
  'Autism Spectrum Disorder (‡§∏‡•ç‡§µ‡§≤‡•Ä‡§®‡§§‡§æ ‡§∏‡•ç‡§™‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡§Æ ‡§µ‡§ø‡§ï‡§æ‡§∞)', 'Cerebral Palsy (‡§∏‡•á‡§∞‡•á‡§¨‡•ç‡§∞‡§≤ ‡§™‡§æ‡§≤‡•ç‡§∏‡•Ä)',
  'Muscular Dystrophy (‡§Æ‡§æ‡§Ç‡§∏‡§™‡•á‡§∂‡•Ä‡§Ø ‡§Ö‡§™‡§ï‡•ç‡§∑‡§Ø)', 'Chronic Neurological Conditions (‡§¶‡•Ä‡§∞‡•ç‡§ò‡§ï‡§æ‡§≤‡§ø‡§ï ‡§§‡§Ç‡§§‡•ç‡§∞‡§ø‡§ï‡§æ ‡§∞‡•ã‡§ó)',
  'Multiple Sclerosis (‡§è‡§ï‡§æ‡§ß‡§ø‡§ï ‡§∏‡•ç‡§ï‡•ç‡§≤‡•á‡§∞‡•ã‡§∏‡§ø‡§∏)', 'Speech and Language Disability (‡§µ‡§æ‡§ï‡•ç ‡§î‡§∞ ‡§≠‡§æ‡§∑‡§æ ‡§µ‡§ø‡§ï‡§≤‡§æ‡§Ç‡§ó‡§§‡§æ)',
  'Thalassemia (‡§•‡•à‡§≤‡•á‡§∏‡•Ä‡§Æ‡§ø‡§Ø‡§æ)', 'Hemophilia (‡§π‡•Ä‡§Æ‡•ã‡§´‡•Ä‡§≤‡§ø‡§Ø‡§æ)', 'Sickle Cell Disease (‡§∏‡§ø‡§ï‡§≤ ‡§∏‡•á‡§≤ ‡§∞‡•ã‡§ó)',
  'Multiple Disabilities (‡§è‡§ï‡§æ‡§ß‡§ø‡§ï ‡§µ‡§ø‡§ï‡§≤‡§æ‡§Ç‡§ó‡§§‡§æ‡§è‡§Å)', 'Acid Attack Victims (‡§§‡•á‡§ú‡§º‡§æ‡§¨ ‡§π‡§Æ‡§≤‡•á ‡§ï‡•á ‡§™‡•Ä‡§°‡§º‡§ø‡§§)',
  'Parkinson‚Äôs Disease (‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§® ‡§∞‡•ã‡§ó)', 'Learning Disabilities (‡§Ö‡§ß‡§ø‡§ó‡§Æ ‡§µ‡§ø‡§ï‡§≤‡§æ‡§Ç‡§ó‡§§‡§æ‡§è‡§Å)'
];

const interests = [
  'Sports (‡§ñ‡•á‡§≤)', 'Jobs (‡§®‡•å‡§ï‡§∞‡§ø‡§Ø‡§æ‡§Å)', 'Scholarships (‡§õ‡§æ‡§§‡•ç‡§∞‡§µ‡•É‡§§‡•ç‡§§‡§ø)'
];

export default function EnrollmentForm() {
  const [dob, setDob] = useState('');
  const [gender, setGender] = useState('');
  const [disability, setDisability] = useState('');
  const [interest, setInterest] = useState('');

  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();
    const formData = { dob, gender, disability, interest };
    localStorage.setItem('userForm', JSON.stringify(formData));
    navigate('/opportunities');
  };

  return (
    <div className="enrollment-form-container">
      <h1>Aarambh Niyati</h1>
      <form onSubmit={handleSubmit}>

        <label>
          Date of Birth:
          <input
            type="date"
            value={dob}
            onChange={(e) => setDob(e.target.value)}
            required
          />
        </label>

        <label>
          Gender:
          <select value={gender} onChange={(e) => setGender(e.target.value)} required>
            <option value="">Select Gender</option>
            <option value="Male (‡§™‡•Å‡§∞‡•Å‡§∑)">Male (‡§™‡•Å‡§∞‡•Å‡§∑)</option>
            <option value="Female (‡§Æ‡§π‡§ø‡§≤‡§æ)">Female (‡§Æ‡§π‡§ø‡§≤‡§æ)</option>
            <option value="Other (‡§Ö‡§®‡•ç‡§Ø)">Other (‡§Ö‡§®‡•ç‡§Ø)</option>
          </select>
        </label>

        <label>
          Disability Type:
          <select value={disability} onChange={(e) => setDisability(e.target.value)} required>
            <option value="">Select Disability</option>
            {disabilities.map((d, i) => (
              <option key={i} value={d}>{d}</option>
            ))}
          </select>
        </label>

        <label>
          Area of Interest:
          <select value={interest} onChange={(e) => setInterest(e.target.value)} required>
            <option value="">Select Interest</option>
            {interests.map((i, idx) => (
              <option key={idx} value={i}>{i}</option>
            ))}
          </select>
        </label>

        <button type="submit">üîç Search Opportunities</button>

      </form>
    </div>
  );
}
